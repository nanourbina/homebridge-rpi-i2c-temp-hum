"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var crypto_1 = __importDefault(require("crypto"));
function HKDF(hashAlg, salt, ikm, info, size) {
    // create the hash alg to see if it exists and get its length
    var hash = crypto_1.default.createHash(hashAlg);
    var hashLength = hash.digest().length;
    // now we compute the PRK
    var hmac = crypto_1.default.createHmac(hashAlg, salt);
    hmac.update(ikm);
    var prk = hmac.digest();
    var buffers = [];
    var num_blocks = Math.ceil(size / hashLength);
    var prev = Buffer.alloc(0);
    var output;
    info = Buffer.from(info);
    for (var i = 0; i < num_blocks; i++) {
        var blockHmac = crypto_1.default.createHmac(hashAlg, prk);
        var input = Buffer.concat([
            prev,
            info,
            Buffer.from(String.fromCharCode(i + 1))
        ]);
        blockHmac.update(input);
        prev = blockHmac.digest();
        buffers.push(prev);
    }
    output = Buffer.concat(buffers, size);
    return output.slice(0, size);
}
exports.HKDF = HKDF;
//# sourceMappingURL=hkdf.js.map